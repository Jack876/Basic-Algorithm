Return the provided string with the first letter of each word capitalized. Make sure the rest of the word is in lower case.

For the purpose of this exercise, you should also capitalize connecting words like "the" and "of".

Remember to use Read-Search-Ask if you get stuck. Write your own code.



function titleCase(str) {
  var arr = str.toLowerCase().split(' ');
  var newArr = [];
  arr.forEach(function(word) {
      var capWord = word.charAt(0).toUpperCase() + word.substring(1);
    newArr.push(capWord);
  });
  return newArr.join(' ');
}

titleCase("I'm a little tea pot");



// another way to substitute the foreach loop:
for(i = 0; i < arr.length; i ++) {
    var capWord = arr[i].charAt(0).toUpperCase() + arr[i].substring(1);
    newArr.push(capWord);



//another way to do it:

String.prototype.replaceAt = function(index, character) {
  // Returns the new modified character
  return this.substr(0, index) + character + this.substr(index + character.length);
};

function titleCase(str) {
  var newTitle = str.split(' ');
  var updatedTitle = [];
  for (var st = 0; st < newTitle.length; st++) {
    updatedTitle[st] = newTitle[st].toLowerCase().replaceAt(0, newTitle[st].charAt(0).toUpperCase());
  }

  return updatedTitle.join(' ');
}

titleCase("I'm a little tea pot");

// Simpler version, can be done with just regex too

function titleCase(str) {
  return str.toLowerCase().split(' ').map(function(word) {
    return word.replace(/(\w)/, (match, p1) => p1.toUpperCase());
  }).join(' ');
}

titleCase("I'm a little tea pot");
